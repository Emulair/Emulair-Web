// <auto-generated />
using System;
using EmulairWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emulair.DataAccess.Migrations
{
    [DbContext(typeof(EmulairWEBContext))]
    partial class EmulairWEBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmulairWEB.Models.Achievement", b =>
                {
                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AchievementID");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("IconCompletedId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IconCompletedID");

                    b.Property<Guid?>("IconPendingId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IconPendingID");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("AchievementId", "GameId")
                        .HasName("PK__Achievem__E5C8B99DB9D1D2E5");

                    b.HasIndex("GameId");

                    b.HasIndex("IconCompletedId");

                    b.HasIndex("IconPendingId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("EmulairWEB.Models.Game", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("EmulairWEB.Models.Highlight", b =>
                {
                    b.Property<Guid>("HighlightId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HighlightID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LinkURL");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("HighlightId");

                    b.ToTable("Highlights");
                });

            modelBuilder.Entity("EmulairWEB.Models.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ImageID");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("EmulairWEB.Models.Review", b =>
                {
                    b.Property<Guid>("ReviewId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ReviewID");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("EmulairWEB.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EmulairWEB.Models.Stat", b =>
                {
                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StatID");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("StatId");

                    b.HasIndex("GameId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("EmulairWEB.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D1053402BFFE4C")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserAchievement", b =>
                {
                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AchievementID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<bool?>("IsUnlocked")
                        .HasColumnType("bit");

                    b.Property<byte[]>("UnlockedAt")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("AchievementId", "UserId")
                        .HasName("PK__UserAchi__F61BBC2A948F132B");

                    b.HasIndex("UserId");

                    b.HasIndex("AchievementId", "GameId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserGame", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GameID");

                    b.Property<DateTime?>("LastPlayed")
                        .HasColumnType("datetime");

                    b.Property<int?>("TotalHoursPlayed")
                        .HasColumnType("int");

                    b.HasKey("UserId", "GameId")
                        .HasName("PK__UserGame__D52345D1B5FCBEC9");

                    b.HasIndex("GameId");

                    b.ToTable("UserGames");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserStat", b =>
                {
                    b.Property<Guid>("StatId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StatID");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserID");

                    b.Property<bool?>("ValueB")
                        .HasColumnType("bit");

                    b.Property<string>("ValueC")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("ValueN")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("StatId", "UserId")
                        .HasName("PK__UserStat__EB6EA1D4539532BA");

                    b.HasIndex("UserId");

                    b.ToTable("UserStats");
                });

            modelBuilder.Entity("EmulairWEB.Models.Achievement", b =>
                {
                    b.HasOne("EmulairWEB.Models.Game", "Game")
                        .WithMany("Achievements")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__Achieveme__GameI__3E52440B");

                    b.HasOne("EmulairWEB.Models.Image", "IconCompleted")
                        .WithMany("AchievementIconCompleteds")
                        .HasForeignKey("IconCompletedId")
                        .HasConstraintName("FK__Achieveme__IconC__403A8C7D");

                    b.HasOne("EmulairWEB.Models.Image", "IconPending")
                        .WithMany("AchievementIconPendings")
                        .HasForeignKey("IconPendingId")
                        .HasConstraintName("FK__Achieveme__IconP__3F466844");

                    b.Navigation("Game");

                    b.Navigation("IconCompleted");

                    b.Navigation("IconPending");
                });

            modelBuilder.Entity("EmulairWEB.Models.Review", b =>
                {
                    b.HasOne("EmulairWEB.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__Reviews__GameID__300424B4");

                    b.HasOne("EmulairWEB.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__UserID__30F848ED");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmulairWEB.Models.Stat", b =>
                {
                    b.HasOne("EmulairWEB.Models.Game", "Game")
                        .WithMany("Stats")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK__Stats__GameID__37A5467C");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("EmulairWEB.Models.User", b =>
                {
                    b.HasOne("EmulairWEB.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__276EDEB3");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserAchievement", b =>
                {
                    b.HasOne("EmulairWEB.Models.User", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserAchie__UserI__440B1D61");

                    b.HasOne("EmulairWEB.Models.Achievement", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId", "GameId")
                        .HasConstraintName("FK__UserAchievements__4316F928");

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserGame", b =>
                {
                    b.HasOne("EmulairWEB.Models.Game", "Game")
                        .WithMany("UserGames")
                        .HasForeignKey("GameId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGames__GameI__2D27B809");

                    b.HasOne("EmulairWEB.Models.User", "User")
                        .WithMany("UserGames")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserGames__UserI__2C3393D0");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmulairWEB.Models.UserStat", b =>
                {
                    b.HasOne("EmulairWEB.Models.Stat", "Stat")
                        .WithMany("UserStats")
                        .HasForeignKey("StatId")
                        .IsRequired()
                        .HasConstraintName("FK__UserStats__StatI__3A81B327");

                    b.HasOne("EmulairWEB.Models.User", "User")
                        .WithMany("UserStats")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserStats__UserI__3B75D760");

                    b.Navigation("Stat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmulairWEB.Models.Achievement", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("EmulairWEB.Models.Game", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Reviews");

                    b.Navigation("Stats");

                    b.Navigation("UserGames");
                });

            modelBuilder.Entity("EmulairWEB.Models.Image", b =>
                {
                    b.Navigation("AchievementIconCompleteds");

                    b.Navigation("AchievementIconPendings");
                });

            modelBuilder.Entity("EmulairWEB.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EmulairWEB.Models.Stat", b =>
                {
                    b.Navigation("UserStats");
                });

            modelBuilder.Entity("EmulairWEB.Models.User", b =>
                {
                    b.Navigation("Reviews");

                    b.Navigation("UserAchievements");

                    b.Navigation("UserGames");

                    b.Navigation("UserStats");
                });
#pragma warning restore 612, 618
        }
    }
}
